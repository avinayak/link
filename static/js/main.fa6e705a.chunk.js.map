{"version":3,"sources":["SolarSailer.js","Latte.js","config.js","db.js","Join.js","Robots.js","Room.js","Carousel.js","App.js","serviceWorker.js","index.js"],"names":["sketch","p","width","height","lastx","lasty","setup","window","innerWidth","createCanvas","WEBGL","background","myCustomRedrawAccordingToNewPropsHandler","props","sendDragged","rx","ry","mouseDragged","noStroke","ellipse","mouseX","mouseY","draw","translate","rect","SolarSailer","state","x","y","this","dataChannel","addEventListener","event","setState","JSON","parse","data","stringify","send","Component","Latte","ping","lats","console","log","Date","getTime","concat","setInterval","Math","min","round","reduce","previous","current","length","max","animation","map","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firebase","initializeApp","firestore","setGuestSdp","guestSdp","key","collection","doc","set","guestJoinTs","FieldValue","serverTimestamp","merge","then","catch","error","Join","handleChange","roomcode","target","value","toUpperCase","listenToRoom","onSnapshot","sdps","wtfRtc","iceServers","urls","consumeOffer","hostSdp","consumeResult","sdp","getOpenDataChannel","saveDataChannel","handleClick","loading","match","noInputs","Fragment","initialValue","style","padding","inputStyle","border","borderBottom","inputFocusStyle","borderColor","onComplete","Robots","sendMove","cell","payload","from","roomKey","type","turn","font","windowWidth","cellSpacing","windowHeight","networkTurn","colors","robotRadius","marginX","subSpacing","grid","opx","opy","song","selfPlayed","opponentPlayed","isGameOver","scores","criticalMass","WIDTH","HEIGHT","CRITICAL_MASS","gridToPixel","subOffset","mass","isInside","isLegalCell","color","loadSound","loadFont","i","Array","j","initGrid","isExploding","k","inMovment","explode","unstableCell","forEach","adjacentCell","explodedRobot","pop","targetCoordinates","move","targetCell","targetStack","robotId","push","pushToAdjacent","play","pos","self","random","toString","substring","destinationX","destinationY","show","fill","update","createRobot","checkUnstablesAndExplode","criticals","getUnstableCells","mouseClicked","floor","smooth","strokeWeight","textSize","stroke","line","drawLines","element","textFont","text","_scores","calculateScore","host","screen","textAlign","fontSize","className","Room","rtcOffer","offerResult","roomkey","tab","localStorage","getItem","setItem","room","callback","rtc","createOffer","ordered","hostJoinTs","answer","answerResult","params","roomid","location","pathname","split","shareURL","href","Tabs","onChange","e","indicatorColor","textColor","centered","Tab","label","letterSpacing","Carousel","Container","maxWidth","to","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","App","classes","CssBaseline","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","path","component","Boolean","hostname","outerTheme","createMuiTheme","shadows","palette","primary","main","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa6e705a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\n\r\nfunction sketch(p) {\r\n  let rotation = 0;\r\n  let width = 0;\r\n  let height = 0;\r\n  let lastx = 0;\r\n  let lasty = 0;\r\n\r\n  p.setup = function() {\r\n    //console.log(window.innerWidth - 30);\r\n    \r\n    width = window.innerWidth - 30 < 536 ? window.innerWidth - 30 : 536;\r\n    height = width;\r\n    p.createCanvas(width, width, p.WEBGL);\r\n    p.background(4);\r\n  };\r\n\r\n  p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\r\n    p.sendDragged = props.sendDragged;\r\n    if(props.rx != lastx || props.ry != lasty) {\r\n      lastx = props.rx;\r\n      lasty = props.ry;\r\n    }\r\n  };\r\n\r\n  p.mouseDragged = function(props) {\r\n    p.noStroke();\r\n    p.ellipse(p.mouseX, p.mouseY, 2);\r\n    p.sendDragged(p.mouseX, p.mouseY);\r\n  };\r\n  var i = 0;\r\n  p.draw = function() {\r\n    p.noStroke();\r\n    p.translate(-width / 2, -height / 2);\r\n    p.ellipse(lastx, lasty, 2);\r\n    i += 1;\r\n    p.rect(5, 5 * 2, 1, 1);\r\n  };\r\n}\r\n\r\nexport class SolarSailer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x:0,\r\n      y:0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dataChannel.addEventListener(\"message\", event => {\r\n      this.setState(JSON.parse(event.data))\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        {JSON.stringify(this.state)}\r\n        <P5Wrapper sketch={sketch} rx={this.state.x} ry={this.state.y} sendDragged={(x, y) => {\r\n          this.props.dataChannel.send(JSON.stringify({x,y}))\r\n        }} />\r\n        Latency Test 1\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolarSailer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  VerticalGridLines,\r\n  XAxis,\r\n  YAxis,\r\n  LineSeries,\r\n  HorizontalGridLines\r\n} from \"react-vis\";\r\n\r\nexport class Latte extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ping: 0,\r\n      lats: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dataChannel.addEventListener(\"message\", event => {\r\n      console.log(event.data);\r\n      if (event.data == \"PONG\") {\r\n        console.log(\"PONG\", new Date().getTime() - this.state.ping);\r\n        this.setState({\r\n          lats: this.state.lats.concat([new Date().getTime() - this.state.ping])\r\n        });\r\n      }\r\n      if (event.data == \"PING\") {\r\n        this.props.dataChannel.send(\"PONG\");\r\n      }\r\n    });\r\n    setInterval(() => {\r\n      var ping = new Date().getTime();\r\n      this.setState({ ping });\r\n      this.props.dataChannel.send(\"PING\");\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Min: {Math.min(...this.state.lats)} ms</p>\r\n        <p>\r\n          Average:{\" \"}\r\n          {Math.round(this.state.lats.reduce(\r\n            (previous, current) => (current += previous),\r\n            0\r\n          ) / this.state.lats.length) }{\" ms\"}\r\n        </p>\r\n        <p>Max: {Math.max(...this.state.lats)} ms</p>\r\n        <XYPlot height={300} width={300}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis />\r\n          <YAxis />\r\n          <LineSeries\r\n          animation\r\n            data={this.state.lats.map((y, x) => ({\r\n              x,\r\n              y\r\n            }))}\r\n          />\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Latte;\r\n","var config = {\r\n  apiKey: \"AIzaSyDGBsWu_dwvGW3TGXZswEMR4X2PNhStaA4\",\r\n  authDomain: \"solar-sailer.firebaseapp.com\",\r\n  databaseURL: \"https://solar-sailer.firebaseio.com\",\r\n  projectId: \"solar-sailer\",\r\n  storageBucket: \"solar-sailer.appspot.com\",\r\n  messagingSenderId: \"23628532125\",\r\n  appId: \"1:23628532125:web:f48762f23514163d940774\"\r\n};\r\n\r\nexport default config;\r\n","import firebase from \"firebase\";\r\nimport config from \"./config\";\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nlet setGuestSdp = (guestSdp, key) => {\r\n  db.collection(\"live\")\r\n    .doc(key)\r\n    .set(\r\n      {\r\n        guestSdp,\r\n        guestJoinTs: firebase.firestore.FieldValue.serverTimestamp()\r\n      },\r\n      { merge: true }\r\n    )\r\n    .then(function() {\r\n      console.log(\"guestSdp successfully written!\");\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error writing document: \", error);\r\n    });\r\n};\r\n\r\nlet setHostSdp = (hostSdp, key) => {\r\n  db.collection(\"live\")\r\n    .doc(key)\r\n    .set({\r\n      hostSdp,\r\n      hostJoinTs: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n    .then(function() {\r\n      console.log(\"hostSdp successfully written!\");\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error writing document: \", error);\r\n    });\r\n};\r\n\r\nlet listenOnRoom = (room, callback) => {\r\n  db.collection(\"live\")\r\n    .doc(room)\r\n    .onSnapshot(callback);\r\n};\r\n\r\nexport { db, setGuestSdp, setHostSdp, listenOnRoom };\r\n","import React, { Component } from \"react\";\r\nimport { db, setGuestSdp } from \"./db\";\r\nimport wtfRtc from \"wtf-rtc\";\r\nimport PinInput from \"react-pin-input\";\r\nexport class Join extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      roomcode: \"\"\r\n    };\r\n  }\r\n  handleChange = event => {\r\n    this.setState({ roomcode: event.target.value.toUpperCase() });\r\n  };\r\n\r\n  listenToRoom = roomcode => {\r\n    db.collection(\"live\")\r\n      .doc(roomcode)\r\n      .onSnapshot(doc => {\r\n        // console.log(rtcOffer);\r\n        console.log(\"Current data \", doc.data());\r\n        var sdps = doc.data();\r\n        console.log(sdps);\r\n        if (sdps && \"hostSdp\" in sdps && !(\"guestSdp\" in sdps)) {\r\n          var rtc = wtfRtc(\"solarsailer\", {\r\n            iceServers: [\r\n              { urls: \"stun:stun.l.google.com:19302\" },\r\n              { urls: \"stun:stun1.l.google.com:19302\" },\r\n              { urls: \"stun:stun2.l.google.com:19302\" },\r\n              { urls: \"stun:stun3.l.google.com:19302\" },\r\n              { urls: \"stun:stun4.l.google.com:19302\" },\r\n              { urls: \"stun:stun.voxgratia.org\" }\r\n            ]\r\n          });\r\n          rtc.consumeOffer(sdps.hostSdp, (error, consumeResult) => {\r\n            setGuestSdp(consumeResult.sdp, roomcode);\r\n            console.log(\"consumeResult\", error, consumeResult);\r\n            consumeResult.getOpenDataChannel((error, dataChannel) => {\r\n              console.log(error, dataChannel);\r\n              this.props.saveDataChannel(dataChannel);\r\n            });\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleClick = value => {\r\n    this.setState({ loading: true });\r\n    this.listenToRoom(value.toUpperCase());\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match);\r\n    if (this.props.match && this.props.match.length > 0) {\r\n      this.listenToRoom(this.props.match);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.props.noInputs ? (\r\n          <React.Fragment>\r\n            <PinInput\r\n              length={6}\r\n              initialValue=\"\"\r\n         \r\n              style={{ padding: \"10px\" }}\r\n              inputStyle={{ border: \"none\", borderBottom: \"1px solid black\" }}\r\n              inputFocusStyle={{ borderColor: \"blue\" }}\r\n              onComplete={this.handleClick}\r\n            />\r\n\r\n            {/* <button onClick={this.handleClick}>JOIN</button>\r\n        <br/> */}\r\n            {this.state.loading && \"linking...\"}\r\n          </React.Fragment>\r\n        ):(\r\n          \"linking...\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Join;\r\n","import React, { Component } from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\nimport \"p5/lib/addons/p5.sound\";\r\n\r\nexport class Robots extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: -1,\r\n      y: -1,\r\n      turn: !this.props.host\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dataChannel.addEventListener(\"message\", event => {\r\n      let data = JSON.parse(event.data);\r\n\r\n      if (data.from !== this.props.roomKey) {\r\n        console.log(\"received\", data);\r\n        this.setState({\r\n          turn: !this.state.turn,\r\n          x: data.payload.x,\r\n          y: data.payload.y\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMove = cell => {\r\n    let data = { payload: cell, from: this.props.roomKey, type: \"data\" };\r\n    console.log(\"sending\", data);\r\n    this.props.dataChannel.send(JSON.stringify(data));\r\n    this.setState({ turn: !this.state.turn });\r\n  };\r\n\r\n  sketch = p => {\r\n    let WIDTH = 9;\r\n    let HEIGHT = 12;\r\n    let CRITICAL_MASS = 4;\r\n    let width = p.windowWidth;\r\n    let cellSpacing =\r\n      p.windowWidth < p.windowHeight ? (width - 20) / WIDTH : width / 3 / WIDTH;\r\n    let turn = 0;\r\n    let networkTurn = 0;\r\n    let progressHeight = 10;\r\n    let colors = [\"#e74c3c\", \"#2980b9\"];\r\n    let robotRadius = cellSpacing * 0.3;\r\n    let marginX =\r\n      p.windowWidth < p.windowHeight ? 10 : (width - WIDTH * cellSpacing) / 2;\r\n    let marginY = 10;\r\n    let height = cellSpacing * HEIGHT + marginY + progressHeight;\r\n    let subSpacing = cellSpacing * 0.2;\r\n    let easing = 0.4;\r\n    let grid = [];\r\n    let opx = -1;\r\n    let opy = -1;\r\n    let song = null;\r\n    let selfPlayed = false;\r\n    let opponentPlayed = false;\r\n    let isGameOver = false;\r\n    let scores = [0, 0];\r\n    let font;\r\n\r\n    let initGrid = () => {\r\n      for (var i = 0; i < HEIGHT; i++) {\r\n        grid[i] = new Array(WIDTH);\r\n        for (var j = 0; j < WIDTH; j++) {\r\n          grid[i][j] = [];\r\n        }\r\n      }\r\n    };\r\n\r\n    let drawLines = () => {\r\n      for (let i = 0; i < WIDTH + 1; i++) {\r\n        p.line(\r\n          marginX + i * cellSpacing,\r\n          marginY,\r\n          marginX + i * cellSpacing,\r\n          marginY + HEIGHT * cellSpacing\r\n        );\r\n      }\r\n      for (let i = 0; i < HEIGHT + 1; i++) {\r\n        p.line(\r\n          marginX,\r\n          marginY + i * cellSpacing,\r\n          marginX + WIDTH * cellSpacing,\r\n          marginY + i * cellSpacing\r\n        );\r\n      }\r\n    };\r\n    let switchTurn = () => {\r\n      turn = (turn + 1) % 2;\r\n    };\r\n    let criticalMass = cell => {\r\n      if (\r\n        (cell.x == 0 || cell.x == WIDTH - 1) &&\r\n        (cell.y == 0 || cell.y == HEIGHT - 1)\r\n      )\r\n        return CRITICAL_MASS - 2;\r\n      else if (\r\n        cell.x == 0 ||\r\n        cell.x == WIDTH - 1 ||\r\n        (cell.y == 0 || cell.y == HEIGHT - 1)\r\n      )\r\n        return CRITICAL_MASS - 1;\r\n      else return CRITICAL_MASS;\r\n    };\r\n\r\n    let pixelToGrid = (x, y) => {\r\n      return {\r\n        x: Math.floor((x - marginX) / cellSpacing),\r\n        y: Math.floor((y - marginY) / cellSpacing)\r\n      };\r\n    };\r\n\r\n    let gridToPixel = cell => {\r\n      let subOffset = { x: 10, y: 10 };\r\n      let mass = grid[cell.y][cell.x].length;\r\n      if (mass == 0) {\r\n        subOffset = { x: -subSpacing, y: subSpacing };\r\n      } else if (mass == 1) {\r\n        subOffset = { x: -subSpacing, y: -subSpacing };\r\n      } else if (mass == 2) {\r\n        subOffset = { x: subSpacing, y: -subSpacing };\r\n      } else if (mass == 3) {\r\n        subOffset = { x: subSpacing, y: subSpacing };\r\n      }\r\n      return {\r\n        x: cell.x * cellSpacing + cellSpacing / 2 + marginX + subOffset.x,\r\n        y: cell.y * cellSpacing + cellSpacing / 2 + marginY + subOffset.y\r\n      };\r\n    };\r\n\r\n    let calculateScore = () => {\r\n      let _scores = [0, 0];\r\n      for (var i = 0; i < HEIGHT; i++) {\r\n        for (var j = 0; j < WIDTH; j++) {\r\n          if (grid[i][j].length > 0)\r\n            _scores[grid[i][j][0].color] += grid[i][j].length;\r\n        }\r\n      }\r\n      _scores.forEach(element => {\r\n        if (element == 0 && selfPlayed && opponentPlayed) {\r\n          isGameOver = true;\r\n        }\r\n      });\r\n      scores = _scores;\r\n      return _scores;\r\n    };\r\n\r\n    let getUnstableCells = () => {\r\n      let criticals = [];\r\n      let cell = null;\r\n      for (var i = 0; i < HEIGHT; i++) {\r\n        for (var j = 0; j < WIDTH; j++) {\r\n          cell = { x: j, y: i };\r\n          if (grid[i][j].length == criticalMass(cell)) {\r\n            criticals.push(cell);\r\n          }\r\n        }\r\n      }\r\n      return criticals;\r\n    };\r\n\r\n    let isInside = cell => {\r\n      return cell.x >= 0 && cell.x < WIDTH && (cell.y >= 0 && cell.y < HEIGHT);\r\n    };\r\n\r\n    let isLegalCell = cell => {\r\n      if (!isInside(cell)) return false;\r\n      else\r\n        return (\r\n          grid[cell.y][cell.x].length == 0 ||\r\n          grid[cell.y][cell.x][0].color == turn\r\n        );\r\n    };\r\n\r\n    let createRobot = (x, y, color) => {\r\n      let self = {};\r\n      self.inMovment = false;\r\n      self.x = x;\r\n      self.y = y;\r\n      self.robotId = Math.random()\r\n        .toString(36)\r\n        .substring(7);\r\n      self.destinationX = x;\r\n      self.destinationY = y;\r\n      self.color = color;\r\n      self.show = () => {\r\n        p.noStroke();\r\n        p.fill(colors[self.color]);\r\n        p.ellipse(self.x, self.y, robotRadius);\r\n      };\r\n      self.move = (x, y) => {\r\n        if (!self.inMovment) {\r\n          self.destinationX = x;\r\n          self.destinationY = y;\r\n        }\r\n      };\r\n      self.update = (x, y) => {\r\n        self.x += (self.destinationX - self.x) * easing;\r\n        self.y += (self.destinationY - self.y) * easing;\r\n        self.inMovment = !(\r\n          self.x - self.destinationX < 0.1 && self.y - self.destinationY < 0.1\r\n        );\r\n      };\r\n      return self;\r\n    };\r\n\r\n    p.setup = function() {\r\n      song = p.loadSound(\"./light.mp3\");\r\n      font = p.loadFont(\"./pixel.ttf\");\r\n      p.createCanvas(width, height, p.WEBGL);\r\n      initGrid();\r\n    };\r\n\r\n    let pushToAdjacent = (targetCell, explodedRobot) => {\r\n      let targetStack = grid[targetCell.y][targetCell.x];\r\n      for (let i = 0; i < targetStack.length; i++) {\r\n        if (targetStack[i].robotId != explodedRobot.robotId) {\r\n          targetStack[i].robotId = explodedRobot.robotId;\r\n          targetStack[i].color = explodedRobot.color;\r\n        }\r\n      }\r\n      targetStack.push(explodedRobot);\r\n      while (criticalMass(targetCell) < targetStack.length) {\r\n        targetStack.pop();\r\n      }\r\n    };\r\n\r\n    let isExploding = () => {\r\n      for (var i = 0; i < HEIGHT; i++) {\r\n        for (var j = 0; j < WIDTH; j++) {\r\n          for (var k = 0; k < grid[i][j].length; k++) {\r\n            if (grid[i][j][k].inMovment) return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n    let explode = unstableCell => {\r\n      let adjacents = [\r\n        { x: unstableCell.x - 1, y: unstableCell.y },\r\n        { x: unstableCell.x + 1, y: unstableCell.y },\r\n        { x: unstableCell.x, y: unstableCell.y - 1 },\r\n        { x: unstableCell.x, y: unstableCell.y + 1 }\r\n      ];\r\n      adjacents.forEach(adjacentCell => {\r\n        if (\r\n          isInside(adjacentCell) &&\r\n          grid[unstableCell.y][unstableCell.x].length > 0\r\n        ) {\r\n          let explodedRobot = grid[unstableCell.y][unstableCell.x].pop();\r\n          let targetCoordinates = gridToPixel(adjacentCell);\r\n          explodedRobot.move(targetCoordinates.x, targetCoordinates.y);\r\n          pushToAdjacent(adjacentCell, explodedRobot);\r\n        }\r\n      });\r\n      if (!isGameOver) song.play();\r\n    };\r\n\r\n    let play = cell => {\r\n      let pos = gridToPixel(cell);\r\n      grid[cell.y][cell.x].push(createRobot(pos.x, pos.y, turn));\r\n      switchTurn();\r\n      checkUnstablesAndExplode();\r\n    };\r\n    let checkUnstablesAndExplode = () => {\r\n      getUnstableCells().forEach(unstableCell => {\r\n        explode(unstableCell);\r\n      });\r\n    };\r\n\r\n    p.mouseClicked = () => {\r\n      let cell = pixelToGrid(p.mouseX, p.mouseY);\r\n      selfPlayed = true;\r\n      if (isLegalCell(cell) && !isExploding() && networkTurn) {\r\n        play(cell);\r\n        song.play();\r\n        p.sendMove(cell);\r\n        opx = -1;\r\n        opy = -1;\r\n      }\r\n    };\r\n\r\n    let drawProgress = () => {\r\n      p.fill(255);\r\n      p.rect(\r\n        marginX,\r\n        marginY + cellSpacing * HEIGHT,\r\n        cellSpacing * WIDTH,\r\n        progressHeight\r\n      );\r\n      if (scores[0] != 0 && scores[1] != 0) {\r\n        p.fill(colors[0]);\r\n        p.rect(\r\n          marginX,\r\n          marginY + cellSpacing * HEIGHT,\r\n          cellSpacing * WIDTH * (scores[0]/(scores[1]+scores[0])),\r\n          progressHeight\r\n        );\r\n        p.fill(colors[1]);\r\n        p.rect(\r\n          marginX + cellSpacing * WIDTH * (scores[0]/(scores[1]+scores[0])),\r\n          marginY + cellSpacing * HEIGHT,\r\n          cellSpacing * WIDTH * (scores[1]/(scores[1]+scores[0])),\r\n          progressHeight\r\n        );\r\n      }\r\n    };\r\n\r\n    p.draw = function() {\r\n      p.smooth();\r\n      p.strokeWeight(0.6);\r\n      p.translate(-width / 2, -height / 2);\r\n      p.background(\"#34495e\");\r\n      p.textSize(32);\r\n      p.stroke(255, 255, 255, 10);\r\n      drawLines();\r\n      drawProgress();\r\n      for (var i = 0; i < HEIGHT; i++) {\r\n        for (var j = 0; j < WIDTH; j++) {\r\n          if (grid[i][j])\r\n            grid[i][j].forEach(element => {\r\n              element.update();\r\n              element.show();\r\n            });\r\n        }\r\n      }\r\n      if (!isExploding()) {\r\n        checkUnstablesAndExplode();\r\n      }\r\n      if (isGameOver) {\r\n        p.background(0x34, 0x49, 0x53, 10);\r\n        p.textSize(32);\r\n        let s = \"The quick brown fox jumped over the lazy dog.\";\r\n        p.fill(255);\r\n        p.textFont(font);\r\n        p.text(\"Game Over\", 10, 30);\r\n        p.textSize(22);\r\n        p.text(networkTurn == 0 ? \"You won! :)👏 \" : \"You lost :'|\", 10, 60);\r\n      }\r\n      calculateScore();\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = props => {\r\n      p.sendMove = props.sendMove;\r\n      networkTurn = props.turn ? 1 : 0;\r\n      if (props.opx != opx || props.opy != opy) {\r\n        opx = props.opx;\r\n        opy = props.opy;\r\n        console.log({ x: opx, y: opy }, \"-------------\");\r\n        if (isLegalCell({ x: opx, y: opy }) && !isExploding()) {\r\n          opponentPlayed = true;\r\n          play({ x: opx, y: opy });\r\n          if (!isGameOver) song.play();\r\n        }\r\n      }\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ height: window.screen.height - 56, background: \"#34495e\" }}>\r\n        <P5Wrapper\r\n          sketch={this.sketch}\r\n          turn={this.state.turn}\r\n          sendMove={this.sendMove}\r\n          opx={this.state.x}\r\n          opy={this.state.y}\r\n        />\r\n        <div style={{ textAlign: \"center\", color: \"white\" }}>\r\n          {this.state.turn ? (\r\n            <tt style={{ fontSize: 18 }} className=\"blink_me\">\r\n              Your turn\r\n            </tt>\r\n          ) : (\r\n            <small>Waiting for opponent to move</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Robots;\r\n","import React, { Component } from \"react\";\r\nimport SolarSailer from \"./SolarSailer\";\r\nimport Latte from \"./Latte\";\r\nimport Join from \"./Join\";\r\nimport wtfRtc from \"wtf-rtc\";\r\nimport { db, setHostSdp, listenOnRoom } from \"./db\";\r\nimport QRCode from \"react-qr-code\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Robots from \"./Robots\";\r\n\r\nexport class Room extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      host: true,\r\n      sdp: null,\r\n      dataChannel: null,\r\n      offerResult: null,\r\n      roomkey: null,\r\n      tab: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var roomKey = localStorage.getItem(\"link_2.roomkey\");\r\n    roomKey = roomKey || (\"\" + Math.random()).substring(2, 8);\r\n    if (!localStorage.getItem(\"link_2.roomkey\")) {\r\n      localStorage.setItem(\"link_2.roomkey\", roomKey);\r\n    }\r\n    var rtc = wtfRtc(\"solarsailer\", {\r\n      iceServers: [\r\n        { urls: \"stun:stun.l.google.com:19302\" },\r\n        { urls: \"stun:stun1.l.google.com:19302\" },\r\n        { urls: \"stun:stun2.l.google.com:19302\" },\r\n        { urls: \"stun:stun3.l.google.com:19302\" },\r\n        { urls: \"stun:stun4.l.google.com:19302\" },\r\n        { urls: \"stun:stun.voxgratia.org\" }\r\n      ]\r\n    });\r\n\r\n    if (this.state.sdp == null) {\r\n      rtc.createOffer({ ordered: false }, (error, offerResult) => {\r\n        console.log(offerResult.sdp);\r\n        setHostSdp(offerResult.sdp, roomKey);\r\n        this.setState({ sdp: offerResult.sdp, offerResult, roomKey });\r\n      });\r\n    }\r\n\r\n    listenOnRoom(roomKey, doc => {\r\n      var sdps = doc.data();\r\n      if (sdps && \"guestSdp\" in sdps) {\r\n        console.log(sdps.guestSdp);\r\n        if (this.state.offerResult)\r\n          this.state.offerResult.answer(\r\n            sdps.guestSdp,\r\n            (error, answerResult) => {\r\n              console.log(\"answerResult\", error, answerResult);\r\n              if (answerResult)\r\n                answerResult.getOpenDataChannel((error, dataChannel) => {\r\n                  console.log(\"in producer data channel\");\r\n                  console.log(error, dataChannel);\r\n                  dataChannel.send(\"hello\");\r\n                  this.setState({ dataChannel });\r\n                });\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  rtcOffer = null;\r\n\r\n  render() {\r\n    let match = this.props.match.params.roomid;\r\n    let appId = this.props.location.pathname.split(\"/\")[1];\r\n    let shareURL = `${window.location.href.split(\"#\")[0]}#${appId}/${\r\n      this.state.roomKey\r\n    }`;\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.dataChannel == null && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Tabs\r\n              value={this.state.tab}\r\n              onChange={(e, tab) => this.setState({ tab })}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab label=\"Host\"></Tab>\r\n              <Tab label=\"Join\"></Tab>\r\n            </Tabs>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <br />\r\n              {this.state.sdp == null && \"generating id..\"}\r\n            </div>\r\n            {this.state.tab == 0 && (\r\n              <React.Fragment>\r\n                <br />\r\n                {match ? (\r\n                  <Join\r\n                    match={match}\r\n                    noInputs\r\n                    sdp={this.state.sdp}\r\n                    saveDataChannel={dataChannel => {\r\n                      this.setState({ dataChannel, host: false });\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div>\r\n                    <br />\r\n                    <br />\r\n                    <tt style={{ fontSize: 38, letterSpacing: 16 }}>\r\n                      {this.state.roomKey}\r\n                    </tt>\r\n                    <br />\r\n                    <br />\r\n                    {this.state.roomKey && (\r\n                      <div>\r\n                        <QRCode value={shareURL} />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <tt>{shareURL}</tt>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {this.state.tab == 1 && (\r\n              <Join\r\n                match={match}\r\n                sdp={this.state.sdp}\r\n                saveDataChannel={dataChannel => {\r\n                  this.setState({ dataChannel, host: false });\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {this.state.dataChannel && (\r\n          <React.Fragment>\r\n            {appId == \"draw\" && (\r\n              <SolarSailer\r\n              roomKey={this.state.roomKey}\r\n                host={this.state.host}\r\n                dataChannel={this.state.dataChannel}\r\n              />\r\n            )}\r\n            {appId == \"latte\" && (\r\n              <Latte\r\n              roomKey={this.state.roomKey}\r\n                host={this.state.host}\r\n                dataChannel={this.state.dataChannel}\r\n              />\r\n            )}\r\n            {appId == \"robots\" && (\r\n              <Robots\r\n              roomKey={this.state.roomKey}\r\n                host={this.state.host}\r\n                dataChannel={this.state.dataChannel}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Room;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport class Carousel extends Component {\r\n  render() {\r\n    return (\r\n      <Container maxWidth={\"sm\"}>\r\n        <h2>Welcome to The Link</h2>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li>\r\n              <Link to={\"/robots\"} className=\"nav-link\">\r\n                Robots\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={\"/draw\"} className=\"nav-link\">\r\n                Draw Demo\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={\"/latte\"} className=\"nav-link\">\r\n                Latency tester\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React, { useState } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Container from \"@material-ui/core/Container\";\nimport Room from \"./Room\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport '../node_modules/react-vis/dist/style.css';\n\nimport Carousel from \"./Carousel\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <a href={window.location.href.split(\"#\")[0]} className=\"nav-link nonlink\">\n              Link\n            </a>\n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button> */}\n        </Toolbar>\n      </AppBar>\n      \n        <Router>\n          <div>\n            <Switch>\n              <Route path=\"//\" component={Carousel} />\n              <Route path=\"/robots/:roomid\" component={Room} />\n              <Route path=\"/robots\" component={Room} />\n              <Route path=\"/draw/:roomid\" component={Room} />\n              <Route path=\"/draw\" component={Room} />\n              <Route path=\"/latte/:roomid\" component={Room} />\n              <Route path=\"/latte\" component={Room} />\n            </Switch>\n          </div>\n        </Router>\n  \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { orange } from '@material-ui/core/colors';\n\n\nconst outerTheme = createMuiTheme({\n    shadows:[\"none\"],\n    palette: {\n      primary: {\n        main: '#000000',\n      },\n    },\n  });\n\nReactDOM.render(\n    <ThemeProvider theme={outerTheme}>\n  <HashRouter>\n    <App />\n  </HashRouter></ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}